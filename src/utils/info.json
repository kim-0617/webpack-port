{
  "items": [
    {
      "id": 0,
      "title": "알고리즘 공부 입니다.",
      "desc": "프로그래머스에서 다양한 알고리즘 공부를 하였습니다. 현재 2단계 진행중입니다."
    },
    {
      "id": 1,
      "title": "웹 표준 사이트 1",
      "desc": "웹 디자인 기능사를 준비하면서 제작한 웹 표준, 웹 접근성 사이트 입니다. 이미지 슬라이드, 탭메뉴 등을 구현하였습니다."
    },
    {
      "id": 2,
      "title": "웹 표준 사이트 2",
      "desc": "웹 디자인 기능사를 준비하면서 제작한 웹 표준, 웹 접근성 사이트 입니다. 이미지 슬라이드, 탭메뉴 등을 구현하였습니다."
    },
    {
      "id": 3,
      "title": "웹 표준 사이트 3",
      "desc": "웹 디자인 기능사를 준비하면서 제작한 웹 표준, 웹 접근성 사이트 입니다. 이미지 슬라이드, 탭메뉴 등을 구현하였습니다."
    },
    {
      "id": 4,
      "title": "반응형 사이트 01",
      "desc": "헤더메뉴, 슬라이더 영역, 이미지, 텍스트, 배너, 푸터 영역으로 구성된 완성된 사이트 입니다. 노트북, 태블릿, 모바일 등 다양한 기기에서 문제없이 나올 수 있도록 제작하였습니다. 이미지 슬라이드는 swiper js를 사용해서 구현하였습니다."
    },
    {
      "id": 5,
      "title": "반응형 사이트 02",
      "desc": "헤더메뉴, 슬라이더 영역, 이미지, 텍스트, 배너, 푸터 영역으로 구성된 완성된 사이트 입니다. 노트북, 태블릿, 모바일 등 다양한 기기에서 문제없이 나올 수 있도록 제작하였습니다. 이미지 슬라이드는 swiper js를 사용해서 구현하였습니다."
    },
    {
      "id": 6,
      "title": "반응형 사이트 03",
      "desc": "React와 tailwind CSS 를 이용한 모던 뱅크 앱 입니다. lg(large) xs(small) 등 다양한 크기의 기기에서 좋게 보일 수 있도록 제작하였습니다."
    },
    {
      "id": 7,
      "title": "패럴랙스 이펙트",
      "desc": "스크롤 값과 CSS를 적절하게 활용해서 텍스트나 이미지에 효과를 줍니다. 이질감효과, 나타나기 효과, 숨김메뉴 등 다양한 효과들을 구현해 봤습니다."
    },
    {
      "id": 8,
      "title": "퀴즈 이펙트",
      "desc": "웹 디자인 기능사를 준비하면서 제작한 퀴즈 프로그램입니다. 문제의 정보를 객체에 저장한 후 데이터를 객체에서 꺼내서 사용합니다. 문제를 맞추거나 틀리면 해당하는 애니메이션이 플레이되고 다음문제도 풀 수 있습니다."
    },
    {
      "id": 9,
      "title": "슬라이더 이펙트",
      "desc": "바닐라 자바스크립트로 제작한 이미지 슬라이더입니다. 페이드 인 아웃, 좌우, 상하 다양한 움직임을 구현하였고, 닷메뉴, 다음버튼, 루프 등 다양한 기능들을 구현해 봤습니다."
    },
    {
      "id": 10,
      "title": "마우스 이펙트",
      "desc": "마우스 움직임에 따라 화면을 움직이거나, 마우스의 커서를 바꾸는 마우스 이펙트입니다."
    },
    {
      "id": 11,
      "title": "테트리스 게임",
      "desc": "유명한 테트리스 게임을 제작해봤습니다. 위에서 아래로 내려오는 테트리스 게임은 심플하다고 생각해서 왼쪽에서 오른쪽, 즉 가로로 진행되는 게임을 제작했습니다. 다음블럭, 시간초, 점수 등의 기본적인 기능도 물론 구현했습니다."
    },
    {
      "id": 12,
      "title": "CSS 서치 게임",
      "desc": "CSS 382개의 속성을 제한시간 내에 맞추는 CSS 속성 맞추기 게임입니다. CSS 속성들을 객체에 저장시켜 놓고 꺼내서 사용합니다. 여러 메서드들을 이용해서 현재 input 창에 사용자가 입력한 문자열이 CSS 속성배열에 있는가를 검사해서 정답 유무를 판별합니다."
    },
    {
      "id": 13,
      "title": "메모리 카드 게임",
      "desc": "유명한 카드 짝 맞추기 게임을 제작해봤습니다. front와 back을 겹쳐놓고 backface-visiblity : hidden을 이용하여 기존에는 뒷면으로 보여주다가 filp class가 붙으면 앞면을 보여주고 같은 카드를 두번 연속 뒤집었다면 점수를 얻는 게임입니다."
    },
    {
      "id": 14,
      "title": "뮤직 플레이어",
      "desc": "자바스크립트로 구현한 뮤직 플레이어 입니다. audio태그의 play, pause, volume 속성들을 이용해서 제작하였습니다. 제작하는 과정에서 onloadeddata, ended 등의 다양한 audio 이벤트들을 이용해서 제작하였습니다."
    },
    {
      "id": 15,
      "title": "PHP BLOG",
      "desc": "PHP로 제작한 블로그 사이트 입니다. 주요 기능은 회원가입, 로그인, 게시판, 블로그가 있습니다. 게시판과 블로그는 CRUD 기능을 갖고 있습니다. MYSQL을 사용하여 데이터를 관리합니다."
    },
    {
      "id": 16,
      "title": "PHP SITE",
      "desc": "PHP 팀프로젝트로 진행한 생활꿀팁 정보 사이트 잡스비 입니다. 오늘의 이슈, 생활꿀팁, 게시판, 댓글, 로그인, 회원가입, 아이디, 비밀번호 찾기, 회원탈퇴, 마이페이지 등등 다양한 기능을 갖춘 사이트를 제작하였습니다. MYSQL을 이용해서 데이터를 관리합니다."
    },
    {
      "id": 17,
      "title": "반응형 VUE 사이트",
      "desc": "VUE로 제작해본 반응형 사이트 입니다. 데이터를 객체화해서 관리하고, VUE JS의 기본적인 동작과 문법에 대해 학습하였습니다."
    },
    {
      "id": 18,
      "title": "VUE API 사이트",
      "desc": "unsplash, youtube, tmdb api를 사용해서 사이트를 구성하였습니다. fetch를 이용해서 데이터를 불러오는 과정에서 비동기 작업에 대해 공부하였습니다."
    },
    {
      "id": 19,
      "title": "REACT API 사이트",
      "desc": "REACT로 제작해본 api 사이트 입니다. 마찬가지로 unsplash, youtube, tmdb api를 사용하였습니다. 이미지 슬라이드는 swiper js를 이용해서 다양한 이미지 슬라이더를 구현 하였습니다."
    },
    {
      "id": 20,
      "title": "REACT YOUTUBE 사이트",
      "desc": "REACT와 youtube api를 이용한 개발자 youtube 정보 사이트 입니다. useState, useEffect, useRef 등의 기본적인 리액트 훅스들이 익숙해 졌습니다. 또한 반응형 작업으로 다양한 기기에서도 레이아웃이 망가지지 않도록 작업하였습니다. 또한 리액트 라우터를 이용해서 해당 클릭 채널이나 영상의 id 값에 해당하는 페이지를 불러올 수 있도록 했습니다."
    },
    {
      "id": 21,
      "title": "REACT MUSIC 사이트",
      "desc": "REACT와 youtube music을 이용한 Music site 입니다. react player의 다양한 기능을 이용해서 볼륨, 프로그레스바, 프로그레스 바 클릭등의 기능을 구현하였고, ContextAPI를 이용해서 Prop drilling을 회피하는 방법을 실습했습니다."
    },
    {
      "id": 22,
      "title": "REACT WEBGAME 사이트",
      "desc": "REACT의 여러가지 기능들을 학습하면서 만들었던 게임들 입니다. 리액트의 Class형 컴포넌트와 컴포넌트의 생명주기(didMount -> didUpdate -> willUnmount)를 학습했고, useReducer, ContextAPI를 이용해서 다양한 게임들을 제작했습니다."
    },
    {
      "id": 23,
      "title": "REACT FIREBASE DIARY",
      "desc": "REACT와 FIREBASE를 이용해서 만든 DIARY 앱입니다. FIREBASE의 로그인 기능과 FIRESTORE를 이용해서 일기 데이터를 저장합니다. 여기서는 Reducer와 Context API를 이용해서 로그인 정보를 페이지 전체에 방송할 수 있습니다."
    },
    {
      "id": 24,
      "title": "MERN STACK BLOG",
      "desc": "Mongo DB와 EXPRESS를 이용해서 백단을 구성하고, REACT로 프론트엔드를 구성한 리액트 블로그 앱입니다. js로 모델을 설계하고 moongoose를 이용해서 몽고디비에 접속해서 데이터를 저장합니다. 회원가입과 로그인기능, 글작성, 수정 ,삭제, 읽기 등의 기본적인 기능들을 내장하고 있습니다."
    },
    {
      "id": 25,
      "title": "SLACK CLONE CODING",
      "desc": "SWR과 SOCKET IO를 이용해서 만든 슬랙 클론 코딩입니다. styled component와 코드 스플릿팅, 타입스크립트를 이용한 프론트의 정수를 담은 프로젝트라고 생각합니다."
    },
    {
      "id": 26,
      "title": "TWITTER CLONE CODING",
      "desc": "파이어베이스의 auth, firestore, storage 기능을 이용하여 만든 트위터 클론 코딩 앱 입니다. 타입스크립트와 HashRouter를 이용해서 제작하였습니다."
    },
    {
      "id": 27,
      "title": "Fitness Info App",
      "desc": "Rapid API의 ExerciseDB를 이용해서 만든 반응형 Fitness 정보 앱 입니다."
    }
  ]
}
